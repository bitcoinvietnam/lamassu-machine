// FM430 Barracuda stationary scanner
// Author: JKAbrams
// Date: 2021-03-30
// Protocol version: v1.2.8
// For reference, see user guide http://www.newlandca.com/download/Documents/UserGuide/UM10054_NLS-FM430_User_Guide.pdf


/* STORAGE TYPES */
const STORAGE_TYPE = {
  PERMANENT: 0x40,                      // "@"  Save the setting to permanent memory
  TEMPORARY: 0x23                       // "#"  Save the setting to temporary memory, not saved on reboots
};


/* QUERY TYPES */
const QUERY = {
  CURRENT_VALUE: 0x2A,                  // "*" What is the scannerâ€™s current value for the setting(s)
  FACTORY_DEFAULT: 0x26,                // "&" What is the factory default value for the setting(s)
  POSSIBLE_RANGE: 0x5E                  // "^" What is the range of possible values for the setting(s)
};


/* RESPONSES */
const RESPONSES = {
  ACK: 0x05,                  // Ack - Successful operation
  NAK: 0x15,                  // Nak - Data is not belong to the supported range (while setup) or incorrect format (while enquiry)
  ENQ: 0x05                   // Function or type not exist
};


/* STANDARD TYPES */
const VOID = 0;
const NUMBER = 1;
const BYTE = 2;


/* DATA TYPES - Common */
const BOOLEAN = {
  FALSE: 0x30,
  TRUE: 0x31
};

const ON_OFF = {
  OFF: 0x30,
  ON: 0x31
};

const ENABLED_DISABLED = {
  DISABLED: 0x30,
  ENABLED: 0x31
};


/* DATA TYPES - Specific (Used more than once) */
const CHECK_CHARACTER_VERIFICATION = {
  DISABLE: 0x30,
  DO_NOT_TRANSMIT_AFTER_VERIFICATION: 0x31,
  TRANSMIT_AFTER_VERIFICATION: 0x32
};

const TRANSMIT_CHECK_CHARACTER = {
  DO_NOT_TRANSMIT: 0x31, 
  TRANSMIT: 0x32
};

const TRANSMIT_PREAMBLE_CHARACTER = {
  NO_PREAMBLE: 0x30, 
  SYSTEM_CHARACTER: 0x31,
  SYSTEM_CHARACTER_AND_COUNTRY_CODE: 0x32
};

const CHARACTER_ENCODING = {
  DEFAULT_CHARACTER_ENCODING: 0x30,
  UTF_8: 0x31,
  AUTOMATICALLY_SELECT_UTF8_OR_CODE_PAGE: 0x32
};

const INVERSE_READING = {
  REGULAR_ONLY: 0x30,
  INVERSE_ONLY: 0x31,
  BOTH: 0x32
};

const TWIN_CODE = {
  SINGLE_ONLY: 0x30,
  TWIN_ONLY: 0x31,
  BOTH: 0x32
};


/* DATA TYPES - Specific */
const ILLUMINATION = {
  OFF: 0x30,
  NORMAL: 0x31,
  ALWAYS_ON: 0x32, 
  FADE_UP: 0x33
};

const AIMING = {
  AIMING_OFF: 0x30,
  AIMING_NORMAL: 0x31,
  AIMING_ALWAYS_ON: 0x32
};

const SCAN_MODE = {
  LEVEL_MODE: 0x30,
  SENSE_MODE: 0x31,
  CONTINUOUS_MODE: 0x32,
  PULSE_MODE: 0x33
};

const SENSE_MODE_TRIGGER_SELECTION = {
  IMAGE_CHANGE_TRIGGER: 0x30,
  IR_PROXIMITY_TRIGGER: 0x31,
  BOTH: 0x32
};

const SCANNING_PREFERENCE = {
  NORMAL_MODE_PAPER: 0x30,
  SCREEN_MODEL: 0x32,
  BARCODE_PAY_MODE: 0x35
};

const LED_COLOR = {
  RED: 0x30,
  WHITE: 0x31,
  GREEN: 0x32,
  BLUE: 0x33
};

const DECODE_AREA = {
  WHOLE_AREA_DECODING: 0x30,
  SPECIFIC_AREA_DECODING: 0x31
};

const IMAGE_FLIPPING = {
  DO_NOT_FLIP: 0x30, 
  FLIP_HORIZONTALLY: 0x31, 
  FLIP_VERTICALLY: 0x32, 
  FLIP_HORIZONTALLY_AND_VERTICALLY: 0x33
};

const COMMUNICATION_MODE = {
  RS232: 0x30, 
  USB_HID_KEYBOARD: 0x33, 
  USB_HID_POS: 0x35, 
  IBM_SUREPOS_Tabletop: 0x36, 
  IBM_SUREPOS_HANDHELD: 0x37, 
  USB_CDC: 0x38, 
  DATALOGIC_MAGELLAN_AUX_RS232: [0x31, 0x34]
};

const BAUD_RATE = {
  BAUD_2400: 0x31,
  BAUD_4800: 0x32,
  BAUD_9600: 0x33,
  BAUD_14400: 0x34,
  BAUD_19200: 0x35,
  BAUD_38400: 0x36,
  BAUD_57600: 0x37,
  BAUD_115200: 0x38
};

const PARITY_CHECK = {
  NONE: 0x30,
  EVEN_PARITY: 0x31,
  ODD_PARITY: 0x32
};

const DATA_BIT = {
  DATA_BITS_8: 0x30, 
  DATA_BITS_7: 0x31
};

const STOP_BIT = {
  STOP_BIT_1: 0x30, 
  STOP_BIT_2: 0x31
};

const HARDWARE_AUTO_FLOW_CONTROL = {
  DISABLE_HARDWARE_AUTO_FLOW_CONTROL: 0x30,
  ENABLE_HARDWARE_AUTO_FLOW_CONTROL: 0x31
};

const USB_COUNTRY_KEYBOARD_TYPES = {
  US_English: 0x30,
  BRAZIL: 0x31,
  BELGIUM: 0x32,
  CANADA_FRENCH: 0x33,
  CZECHOSLOVAKIA: 0x34,
  DENMARK: 0x35, 
  FINLAND_SWEDISH: 0x36,
  FRANCE: 0x37,
  GERMANY_AUSTRIA: 0x38, 
  Greece: 0x39,
  HUNGARY: [0x31, 0x30],
  ISRAEL_HEBREW: [0x31, 0x31],
  ITALY: [0x31, 0x32], 
  LATIN_AMERICA_SOUTH_AMERICA: [0x31, 0x33],
  NETHERLANDS_DUTCH: [0x31, 0x34],
  NORWAY: [0x31, 0x35],
  POLAND: [0x31, 0x36],
  PORTUGAL: [0x31, 0x37],
  ROMANIA: [0x31, 0x38],
  RUSSIA: [0x31, 0x39],
  SLOVAKIA: [0x32, 0x31],
  SPAIN: [0x32, 0x32], 
  SWEDEN: [0x32, 0x33],
  SWITZERLAND_GERMAN: [0x32, 0x34],
  TURKEY_F: [0x32, 0x35],
  TURKEY_Q: [0x32, 0x36],
  UK: [0x32, 0x37],
  JAPAN: [0x32, 0x38]
};

const CODE_PAGE = {
  CODE_PAGE_1252_WEST_EUROPE_LATIN: 0x30,
  CODE_PAGE_1251_CYRILLIC: 0x31,
  CODE_PAGE_1250_CENTRAL_AND_EAST_EUROPE_LATIN: 0x32,
  CODE_PAGE_1253_GREEK: 0x33,
  CODE_PAGE_1254_TURKISH: 0x34, 
  CODE_PAGE_1255_HEBREW: 0x35,
  CODE_PAGE_1256_ARABIC: 0x36,
  CODE_PAGE_1257_BALTIC: 0x37,
  CODE_PAGE_1258_VIETNAMESE: 0x38,
  CODE_PAGE_936_SIMPLIFIED_CHINESE_GB2312_GBK: 0x39,
  CODE_PAGE_950_TRADITIONAL_CHINESE_BIG5: [0x031, 0x030],
  CODE_PAGE_932_SHIFT_JIS: [0x031, 0x032]
};

const FUNCTION_KEY_MAPPING = {
  DISABLE: 0x30,
  CTRL_ASCII_MODE: 0x31,
  ALT_KEYPAD_MODE: 0x32
};

const INTER_KEYBOARD_DELAY = {
  NO_DELAY: 0x30,
  SHORT_DELAY_20MS: 0x31, 
  LONG_DELAY_40MS: 0x32
};

const CAPS_LOCK = {
  CAPS_LOCK_OFF: 0x30,
  CAPS_LOCK_ON: 0x31,
  CAPS_LOCK_OFF_JAPANESE: 0x32,
  CAPS_LOCK_ON_JAPANESE: 0x33
};

const CONVERT_CASE = {
  NO_CASE_CONVERSION: 0x30,
  CONVERT_ALL_TO_UPPER_CASE: 0x31, 
  CONVERT_ALL_TO_LOWER_CASE: 0x32
};

const POLLING_RATE = {
  TIME_1MS: 0x30,
  TIME_2MS: 0x31,
  TIME_3MS: 0x32,
  TIME_4MS: 0x33, 
  TIME_5MS: 0x34, 
  TIME_6MS: 0x35,
  TIME_7MS: 0x36,
  TIME_8MS: 0x37,
  TIME_9MS: 0x38,
  TIME_10MS: 0x39
};

const UPCA_EAN13_WITH_EXTENDED_COUPON_CODE = {
  OFF: 0x30,
  ALLOW_CONCATENATION: 0x31,
  REQUIRE_CONCATENATION: 0x32
};

const FEBRABAN_STATE = {
  DISABLE_FEBRABAN: 0x30,
  ENABLE_FEBRABAN_DO_NOT_EXPAND: 0x31,
  ENABLE_FEBRABAND_EXPAND: 0x32
};

const TRANSMIT_DELAY_PER_12_CHARACTERS = {
  DELAY_0MS: 0x30,
  DELAY_300MS: 0x31,
  DELAY_400MS: 0x32
};

const START_STOP_CHARACTER_TYPE = {
  ABCD_ABCD: 0x30,
  ABCD_TN_E: 0x31,
  abcd_abcd: 0x32,
  abcd_tn_e: 0x33
};

const CODE11_CHECK_CHARACTER_VERIFICATION = {
  DISABLE: 0x30,
  ONE_CHECK_CHARACTER_MOD11: 0x31, 
  TWO_CHECK_CHARACTERS_MOD11_MOD11: 0x32,
  TWO_CHECK_CHARACTERS_MOD11_MOD9: 0x33,
  ONE_CHECK_CHARACTER_MOD11_SHORTER_THAN_10_TWO_CHECK_CHARACTERS_MOD11_MOD11_LONGER_THEN_10: 0x34,
  ONE_CHECK_CHARACTER_MOD11_SHORTER_THAN_10_TWO_CHECK_CHARACTERS_MOD11_MOD9_LONGER_THEN_10: 0x35
};

const ISBN_FORMAT = {
  ISBN_10: 0x30,
  ISBN_13: 0x31
};

const MSI_PLEASSY_CHECK_CHARACTER_VERIFICATION = {
  DISABLE: 0x30,
  ONE_CHECK_CHARACTER_MOD10: 0x31,
  TWO_CHECK_CHARACTERS_MOD10_MOD10: 0x32, 
  TWO_CHECK_CHARACTERS_MOD10_MOD11: 0x33 
};

const AZTEC_READ_MULTI_BARCODES_ON_AN_IMAGE = {
  MODE_1_READ_ONE_BARCODE_ONLY: 0x30,
  MODE_2_READ_FIXED_NUMBER_OF_BARCODES: 0x31,
  MODE_3_COMPOSITE_READING: 0x32                // Read fixed number of barcodes first. If unsuccessful, read one barcode only
};


module.exports = {
  STORAGE_TYPE,
  QUERY,
  RESPONSES,
  VOID,
  NUMBER,
  BYTE,
  BOOLEAN,
  ON_OFF,
  ENABLED_DISABLED,
  CHECK_CHARACTER_VERIFICATION,
  TRANSMIT_CHECK_CHARACTER,
  TRANSMIT_PREAMBLE_CHARACTER,
  CHARACTER_ENCODING,
  INVERSE_READING,
  TWIN_CODE,
  ILLUMINATION,
  AIMING,
  SCAN_MODE,
  SENSE_MODE_TRIGGER_SELECTION,
  SCANNING_PREFERENCE,
  LED_COLOR,
  DECODE_AREA,
  IMAGE_FLIPPING,
  COMMUNICATION_MODE,
  BAUD_RATE,
  PARITY_CHECK,
  DATA_BIT,
  STOP_BIT,
  HARDWARE_AUTO_FLOW_CONTROL,
  USB_COUNTRY_KEYBOARD_TYPES,
  CODE_PAGE,
  FUNCTION_KEY_MAPPING,
  INTER_KEYBOARD_DELAY,
  CAPS_LOCK,
  CONVERT_CASE,
  POLLING_RATE,
  UPCA_EAN13_WITH_EXTENDED_COUPON_CODE,
  FEBRABAN_STATE,
  TRANSMIT_DELAY_PER_12_CHARACTERS,
  START_STOP_CHARACTER_TYPE,
  CODE11_CHECK_CHARACTER_VERIFICATION,
  ISBN_FORMAT,
  MSI_PLEASSY_CHECK_CHARACTER_VERIFICATION,
  AZTEC_READ_MULTI_BARCODES_ON_AN_IMAGE
};
